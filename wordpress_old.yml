---
- name: 'wordpress installing with playbook'
  hosts: webserver
  #become: yes
  tasks:
    - name: 'Installing mysql php nginx pip packeges'
      apt:
        name:
           - nginx
           - mariadb-server
           - mariadb-client
           - php-fpm
           - php-mysql
           - python3-pip
           - python3-pymysql  
        state: present
        update_cache: yes
      become: yes
    - name: install pymysql
      become: yes 
      pip:
        name: pymysql
        state: present

    - name: set root mysql password
      mysql_user:
               name: root
               password: Aa123456
               login_user: root
               login_password: Aa123456
               check_implicit_admin: yes
               priv: "*.*:ALL,GRANT"
               login_unix_socket: /var/run/mysqld/mysqld.sock
      become: yes

    - name: 'create wordpress db'
      mysql_db:
             name: 'wordpress_db'
             state: present
             login_user: root
             login_password: Aa123456
             login_unix_socket: /var/run/mysqld/mysqld.sock
      become: yes

    - name: Create Wordpress mysql user
      mysql_user:
             name: 'wordpress_user'
             password: 'my_password'
             priv: '*.*:ALL'
             login_user: root
             login_password: Aa123456
             login_unix_socket: /var/run/mysqld/mysqld.sock
      become: yes

    - name: 'wordpress site config'
      copy:
        src:  wordpress_site.conf
        dest: /etc/nginx/sites-available/wordpress.conf
      become: yes
    
    - name: remove nginx default site
      become: yes
      ansible.builtin.file:
                         path: /etc/nginx/sites-enabled/default
                         state: absent

    - name: Create a symbolic link
      become: yes
      ansible.builtin.file:
                         src: /etc/nginx/sites-available/wordpress.conf
                         dest: /etc/nginx/sites-enabled/wordpress.conf
                         state: link                     
      notify:
        - name: Reload nginx

    - name: 'check wordpress exist or not'
      stat: path=/var/www/wordpress
      register: wordpress_path_check

    - name: download and unarchive wordpress
      unarchive: 
              src: http://wordpress.org/latest.tar.gz
              dest: /var/www/
              remote_src: yes
      when: not wordpress_path_check.stat.exists

    - name: change wordpress folder ownership
      file:
              path: /var/www/wordpress
              owner: www-data
              group: www-data
      become: yes
     
  handlers:
    - name: Reload nginx
      ansible.builtin.service:
        name: nginx
        state: reloaded
